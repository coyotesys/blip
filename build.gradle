buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'bintray'


defaultTasks 'clean', 'build', 'jacocoTestReport'


group = 'coyote'
version = '0.7'


jar {
	manifest {
		attributes  'Implementation-Title' : 'Coyote BLIP',
		'Provider' : 'Coyote Codeworks',
		'Implementation-Version' : version
	}
}


// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}


task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}


// add javadoc/source jar tasks as artifacts
artifacts {
	archives sourcesJar, javadocJar
}


repositories {

	mavenLocal()

	// Use our own repo for coyote libraries
	jcenter{
	  url 'http://dl.bintray.com/sdcote/maven'
	}

	// for everything else we use Maven
	mavenCentral()
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'coyote', name: 'DataFrame', version: '0.0.3'
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			if (plugins.hasPlugin('war')) {
				from components.web
			} else {
				from components.java
			}

			artifact sourcesJar {
				classifier "sources"
			}

			artifact javadocJar {
				classifier "javadoc"
			}
		}
	}
	
	repositories {
		mavenLocal()
	}
}


task fatJar(type: Jar) {
	manifest {
		attributes  'Implementation-Title' : 'Coyote BLIP',
		'Provider' : 'Coyote Codeworks',
		'Implementation-Version' : version
	}
	baseName = project.name + '-all'
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
	}{
		exclude "META-INF/*.RSA"
	}
	with jar
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}


bintray {
	user = bintrayUser
	key = bintrayKey
	publications = ['mavenJava']
	pkg {
		repo = 'maven'
		name = 'Blip'
		desc = 'A toolkit for reliable and efficient transfer of data in a multicast network'
		licenses = ['MIT']
		labels = ['Java', 'multicast', 'messaging', 'bus', 'distributed']
	}
}


// Used to share projects locally
uploadArchives {
    repositories {
		ivy {
			url "../local-repo"
		}
	}
}
